version: '3.2'

services:
    mongo:
        image: mongo:3
        volumes:
            - db-data:/data/db
        ports:
            - "127.0.0.1:27017:27017"
            
    rabbit:
        image: rabbitmq:3-management
        ports:      
                - "127.0.0.1:5671-5672:5671-5672"
                - "15672:15672"
    
    drip-planner:
        depends_on:
            - rabbit
        build:
            context: ./planner
            dockerfile: Dockerfile
        image: alogo53/drip-planner:0.2.3
        restart: always
        environment:
            RABBITMQ_HOST: rabbit
        env_file:
            - ./version_env  
    
    drip-parser:
        depends_on:
            - rabbit
        build:
            context: ./parser
            dockerfile: Dockerfile
        image: alogo53/drip-parser:0.2.3
        restart: always
        environment:
            RABBITMQ_HOST: rabbit
        env_file:
            - ./version_env           
            
    drip-provisioner:
        depends_on:
            - rabbit
        build:
            context: ./provisioner
            dockerfile: Dockerfile
        image: alogo53/drip-provisioner:0.2.3
        restart: always
        environment:
            RABBITMQ_HOST: rabbit   
        env_file:
            - ./version_env                    
            
    drip-deployer:
        depends_on:
            - rabbit
        build:
            context: ./deployer
            dockerfile: Dockerfile
        image: alogo53/drip-deployer:0.2.3
        restart: always
        environment:
            RABBITMQ_HOST: rabbit
        env_file:
            - ./version_env                 
            
    drip-manager:
        depends_on:
            - rabbit
            - mongo
        build:
            context: ./manager
            dockerfile: Dockerfile
        image: alogo53/drip-manager:0.2.3
        restart: always
        environment:
            RABBITMQ_HOST: rabbit
            MONOG_HOST: mongo
            KEYSTORE_URL: https://github.com/QCAPI-DRIP/DRIP-integration/releases/download/0.2.3/keystore2.tar.gz
            keystorePass: password2
        env_file:
            - ./env_file
            - ./version_env
        ports:
            - "8080:8080"            
            
    #logspout:
        #image: gliderlabs/logspout:latest
        #networks:
            #- logging
        #volumes:
            #- /etc/hostname:/etc/host_hostname:ro
            #- /var/run/docker.sock:/var/run/docker.sock
        #environment:
            #- publish:"127.0.0.1:8000:80"
        #ports:
            #- "8000:80"
            
            
    #influx:
        #image: influxdb
        #volumes:
        #- influx:/var/lib/influxdb
        #networks:
        #- monitoring          

    #grafana:
        #image: grafana/grafana
        #ports:
        #- 0.0.0.0:80:3000
        #volumes:
        #- grafana:/var/lib/grafana
        #depends_on:
        #- influx
        #networks:
        #- monitoring               

    #cadvisor:
        #image: google/cadvisor
        #hostname: '{{.Node.ID}}'
        #command: -logtostderr -docker_only -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=influx:8086
        #volumes:
        #- /:/rootfs:ro
        #- /var/run:/var/run:rw
        #- /sys:/sys:ro
        #- /var/lib/docker/:/var/lib/docker:ro
        #depends_on:
        #- influx
        #networks:
        #- monitoring          

volumes:
  db-data:  
  influx:
    driver: local
  grafana:
    driver: local  
  
#networks:
    #logging:   
    #drip:
    #monitoring:
  
#docker-compose build
#docker-compose up -d



