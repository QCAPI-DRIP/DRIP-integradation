# File to run on a remote machine with access to mog's registry (mogswitch)

version: "3.2"

services:

  streamer:
    environment:
      - inPort=${inPort}
      - inPort2=${inPort2}
      - inPort3=${inPort3}
      - inPort4=${inPort4}
      - ipID1=${ipID1}
      - ipID2=${ipID2}
      - ipID3=${ipID3}
      - ipID4=${ipID4}
      - camnumber=${camnumber}
    image: ${registry}/streamer
    networks:
      - app_mog



  input:
    ports:
      - "${inPort}:${inPort}/udp"
    environment:
      - inPort=2000
      - multicastAddrIP=${multicastAddrIP}
      - multicastAddrPort=${multicastAddrPort}
      - waitingTime=${waitingTime}
      - videoWidth=${videoWidth}
      - videoHeight=${videoHeight}
      - statsdPort=${statsdPort}
      - machineip=${ipID1}
      - identification=${idID1}
      - metrics=${metrics}
    image: ${registry}/inputpipe
    volumes:
      - type: tmpfs
        target: /ram         
    networks:
      - app_mog        

  input2:
    ports:
      - "${inPort2}:${inPort2}/udp"
    environment:
      - inPort=${inPort2}
      - multicastAddrIP=${multicastAddrIP}
      - multicastAddrPort=${multicastAddrPort2}
      - waitingTime=${waitingTime}
      - videoWidth=${videoWidth}
      - videoHeight=${videoHeight}
      - statsdPort=${statsdPort}
      - machineip=${ipID2}
      - identification=${idID2}
      - metrics=${metrics}
    image: ${registry}/inputpipe
    volumes:
      - type: tmpfs
        target: /ram        
    networks:
      - app_mog


  input3:
    ports:
      - "${inPort3}:${inPort3}/udp"
    environment:
      - inPort=${inPort3}
      - multicastAddrIP=${multicastAddrIP}
      - multicastAddrPort=${multicastAddrPort3}
      - waitingTime=${waitingTime}
      - videoWidth=${videoWidth}
      - videoHeight=${videoHeight}
      - statsdPort=${statsdPort}
      - machineip=${ipID3}
      - identification=${idID3}
      - metrics=${metrics}
    image: ${registry}/inputpipe
    volumes:
      - type: tmpfs
        target: /ram   
    networks:
      - app_mog        
        
  input4:
    ports:
      - "${inPort4}:${inPort4}/udp"
    environment:
      - inPort=${inPort4}
      - multicastAddrIP=${multicastAddrIP}
      - multicastAddrPort=${multicastAddrPort4}
      - waitingTime=${waitingTime}
      - videoWidth=${videoWidth}
      - videoHeight=${videoHeight}
      - statsdPort=${statsdPort}
      - machineip=${ipID4}
      - identification=${idID4}
      - metrics=${metrics}
    image: ${registry}/inputpipe
    volumes:
      - type: tmpfs
        target: /ram      
    networks:
      - app_mog        



################################################



  proxy:
    ports:
      - "8081:80"
    environment:
      - multicastAddrIP=${multicastAddrIP}
      - multicastAddrPort=${multicastAddrPort}
      - videoWidth=${videoWidth}
      - videoHeight=${videoHeight}
      - statsdPort=${statsdPort}
      - machineip=${ipPT1}
      - identification=${idPT1}
      - metrics=${metrics}
    image: ${registry}/proxytranscoder
    depends_on:
      - input
    volumes:
      - type: tmpfs
        target: /ram       
    networks:
      - app_mog        


  proxy2:
    ports:
      - "8082:80"
    environment:
      - multicastAddrIP=${multicastAddrIP}
      - multicastAddrPort=${multicastAddrPort2}
      - videoWidth=${videoWidth}
      - videoHeight=${videoHeight}
      - statsdPort=${statsdPort}
      - machineip=${ipPT2}
      - identification=${idPT2}
      - metrics=${metrics}
    image: ${registry}/proxytranscoder
    depends_on:
      - input2 
    volumes:
      - type: tmpfs
        target: /ram    
    networks:
      - app_mog        


  proxy3:
    ports:
      - "8083:80"
    environment:
      - multicastAddrIP=${multicastAddrIP}
      - multicastAddrPort=${multicastAddrPort3}
      - videoWidth=${videoWidth}
      - videoHeight=${videoHeight}
      - statsdPort=${statsdPort}
      - machineip=${ipPT3}
      - identification=${idPT3}
      - metrics=${metrics}
    image: ${registry}/proxytranscoder
    depends_on:
      - input3    
    volumes:
      - type: tmpfs
        target: /ram      
    networks:
      - app_mog        



  proxy4:
    ports:
      - "8084:80"
    environment:
      - multicastAddrIP=${multicastAddrIP}
      - multicastAddrPort=${multicastAddrPort4}
      - videoWidth=${videoWidth}
      - videoHeight=${videoHeight}
      - statsdPort=${statsdPort}
      - machineip=${ipPT4}
      - identification=${idPT4}
      - metrics=${metrics}
    image: ${registry}/proxytranscoder
    depends_on:
      - input4    
    volumes:
      - type: tmpfs
        target: /ram       
    networks:
      - app_mog        


  proxyOut:    
    ports:
      - "8085:80"
    environment:
      - multicastAddrIP=${switcherOutAddrIP}
      - multicastAddrPort=${switcherOutAddrPort}
      - videoWidth=${videoWidth}
      - videoHeight=${videoHeight}
      - statsdPort=${statsdPort}
      - machineip=${ipPTout}
      - identification=${idPTout}
      - metrics=${metrics}
    image: ${registry}/proxytranscoder
    depends_on:
      - switcher    
    volumes:
      - type: tmpfs
        target: /ram      
    networks:
      - app_mog        

#####################################################

  switcher:
    ports:
      - "${switcherREST}:${switcherREST}"
    environment:
      # MulticastGroups
      - multicastAddrIP=${multicastAddrIP}
      # Multicast Port
      - multicastAddrPort=${multicastAddrPort}
      - multicastAddrPort2=${multicastAddrPort2}
      - multicastAddrPort3=${multicastAddrPort3}
      - multicastAddrPort4=${multicastAddrPort4}
      # SWITCHER SETTINGS
      - switcherOutAddrIP=${switcherOutAddrIP}
      - switcherOutAddrPort=${switcherOutAddrPort}
      - switcherREST=${switcherREST}
      - waitingTime=${waitingTime}
      - videoWidth=${videoWidth}
      - videoHeight=${videoHeight}
      - statsdPort=${statsdPort}
      - machineip=${ipVS}
      - identification=${idVS}
      - metrics=${metrics}
      - buffer=${buffer}
      - camnumber=${camnumber}
    image: ${registry}/videoswitcher
    networks:
      - app_mog    


####################################################



  output:
    ports:
      - "${OutPort}:${OutPort}"
    environment:
      - multicastAddrIP=${switcherOutAddrIP}
      - multicastAddrPort=${switcherOutAddrPort}
      - videoWidth=${videoWidth}
      - videoHeight=${videoHeight}
      - OutIP=${OutIP}
      - OutPort=${OutPort}
      - statsdPort=${statsdPort}
      - machineip=${ipOUT}
      - identification=${idOUT}
      - metrics=${metrics}
    image: ${registry}/outputtranscoder  
    volumes:
      - type: tmpfs
        target: /ram        
    networks:
      - app_mog        

  frontend:
    ports:
      - "5050:80"
    image: ${registry}/switchgui
    environment:
      - ipPT1=${ipPT1}
      - ipPT2=${ipPT2}
      - ipPT3=${ipPT3}
      - ipPT4=${ipPT4}
      - ipPTout=${ipPTout}
      - ipVS=${ipVS}
    networks:
      - app_mog      
      
#######################Monitoring########################################      
  adapter:
    ports:
      - "8125:8125/udp"
    image: beia/monitoring_adapter
    environment:
      - MONITORING_SERVER=${monitoring_server}
      - MONITORING_PREFIX=${monitoring_prefix}
      - LOGGING_LEVEL=debug 
    depends_on:
      - ${monitoring_server}      
    networks:
      - app_mog
      - mon
      
      
  monitoring_server:
    image: salmant/ul_monitoring_server_container_image2 # salmant/salman_monitoring_server_container_image
    ports:
      - "8080:8080"
      - "4242:4242"
      - "4245:4245"
      - "7199:7199"
      - "7000:7000"
      - "7001:7001"
      - "9160:9160"
      - "9042:9042"
      - "8012:8012"
      - "61621:61621"
    environment:
      - MONITORING_SERVER=${monitoring_server}     
    networks:
      - mon      
      
networks:
    app_mog:
    mon:
